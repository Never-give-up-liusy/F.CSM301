#include <iostream>
#include <vector>
#include <climits>
using namespace std;

int sum(vector<int>& freq, int i, int j) {
    int total = 0;
    for (int k = i; k <= j; k++) {
        total += freq[k];
    }
    return total;
}

int optimalBST(vector<int>& keys, vector<int>& freq, int n) {
    vector<vector<int>> cost(n, vector<int>(n, 0));

    for (int i = 0; i < n; i++) {
        cost[i][i] = freq[i];
    }

  for (int L = 2; L <= n; L++) {
        for (int i = 0; i <= n - L; i++) {
            int j = i + L - 1;
            cost[i][j] = INT_MAX;

            for (int r = i; r <= j; r++) {
                int c = ((r > i) ? cost[i][r - 1] : 0) + 
                        ((r < j) ? cost[r + 1][j] : 0) + 
                        sum(freq, i, j);

                if (c < cost[i][j]) {
                    cost[i][j] = c;
                }
            }
        }
    }

    return cost[0][n - 1];
}

int main() {
    vector<int> keys = {5, 6};
    vector<int> freq = {17, 25};
    int n = keys.size();

    cout << "Minimum cost of Optimal BST is: " << optimalBST(keys, freq, n) << endl;

    return 0;
}
